'use strict';

const Promise = require('bluebird');
const mongoose = require('mongoose');
const requestId = require('../supports/requestId');
const loggingFactory = require('winrow-logger');

function ConnectMongoose(params) {
  // global Promise
  mongoose.Promise = global.Promise;
  mongoose.set("debug", true);

  const { host_mongoose, port_mongoose, name_mongoose } = params;
  const db_url = `mongodb://${host_mongoose}:${port_mongoose}/${name_mongoose}`;
  return new Promise((resolve, reject) => {
    const connect = mongoose.connect(db_url, { useNewUrlParser: true }, (err) => {
      if (!err) {
        loggingFactory.data(`The mongoose connect complete ${db_url}`, {
          requestId: `${requestId}`
        });
      } else {
        console.info(`Database is not connected`, err);
        reject(err);
      }
    })
    resolve(connect);
  })
    .then(info => {
      loggingFactory.info(`Connect mongoose has been complete`, {
        requestId: `${requestId}`
      });
      return info;
    })
    .catch(err => {
      loggingFactory.error(`The Database Has Error : ${err}`, {
        requestId: `${requestId}`
      });
      return Promise.reject(err)
    });
};

module.exports = ConnectMongoose;